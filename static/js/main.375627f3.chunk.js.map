{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","currentyear","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","isExpanded","setExpanded","note","setNote","handleChange","event","target","name","value","prevNote","onChange","placeholder","TocRounded","rows","Zoom","in","Fab","onAdd","preventDefault","App","notes","setNotes","deleteNote","prevNotes","filter","noteItem","index","newNote","map","ReactDOM","render","document","getElementById"],"mappings":"iLAWeA,MARf,WACI,OACI,iCACI,+BAAI,cAAC,IAAD,IAAJ,sBCKGC,MATf,WACI,IAAMC,GAAc,IAAIC,MAAOC,cAC/B,OACI,iCACI,sDAAiBF,EAAjB,kB,iBCUGG,MAbf,SAAcC,GAIV,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKD,EAAME,QACX,4BAAIF,EAAMG,UACV,wBAAQC,QAPhB,WACIJ,EAAMK,SAASL,EAAMM,KAMjB,SAA+B,cAAC,IAAD,U,wDCyD5BC,MA9Df,SAAoBP,GAAQ,IAAD,EAEWQ,oBAAS,GAFpB,mBAEhBC,EAFgB,KAEJC,EAFI,OAICF,mBAAS,CAC7BN,MAAO,GACPC,QAAS,KANU,mBAIhBQ,EAJgB,KAIVC,EAJU,KASvB,SAASC,EAAaC,GAAQ,IAAD,EACDA,EAAMC,OAAtBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MAEdL,GAAQ,SAAAM,GACJ,OAAO,2BACAA,GADP,kBAEKF,EAAOC,OAoBpB,OACI,8BACI,uBAAMhB,UAAU,cAAhB,UACKQ,GACG,uBACIO,KAAK,QACLG,SAAUN,EACVI,MAAON,EAAKT,MACZkB,YAAY,UAGpB,0BACIJ,KAAK,UACLZ,QAlBhB,WACIM,EAAYW,MAkBAF,SAAUN,EACVI,MAAON,EAAKR,QACZiB,YAAY,kBACZE,KAAMb,EAAa,EAAI,IAE3B,cAACc,EAAA,EAAD,CAAMC,GAAIf,EAAV,SACI,cAACgB,EAAA,EAAD,CAAKrB,QAlCrB,SAAoBU,GAChBd,EAAM0B,MAAMf,GACZC,EAAQ,CACJV,MAAO,GACPC,QAAS,KAEbW,EAAMa,kBA4BM,SAA0B,cAAC,IAAD,cCX/BC,MApCf,WAAgB,IAAD,EAEapB,mBAAS,IAFtB,mBAENqB,EAFM,KAECC,EAFD,KAUb,SAASC,EAAWzB,GAClBwB,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GACjC,OAAOA,IAAU7B,QAIvB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEoB,MAjBN,SAAiBU,GACfN,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBI,UAiBrBP,EAAMQ,KAAI,SAACH,EAAUC,GACpB,OAAO,cAAC,EAAD,CAEL7B,GAAI6B,EACJjC,MAAOgC,EAAShC,MAChBC,QAAS+B,EAAS/B,QAClBE,SAAU0B,GAJLI,MAMT,cAAC,EAAD,QCzCNG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.375627f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <h1><NotesIcon />   Keep Notes</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    const currentyear = new Date().getFullYear();\r\n    return(\r\n        <footer>\r\n            <p>Copyright ©️ {currentyear} Himanshu</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction Note(props) {\r\n    function handleDelete() {\r\n        props.onDelete(props.id);\r\n    }\r\n    return (\r\n        <div className=\"note\">\r\n            <h1>{props.title}</h1>\r\n            <p>{props.content}</p>\r\n            <button onClick={handleDelete}><DeleteIcon /></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Note;","import React, { useState } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { TocRounded } from \"@material-ui/icons\";\r\n\r\nfunction CreateArea(props) {\r\n\r\n    const [isExpanded, setExpanded] = useState(false);\r\n\r\n    const [note, setNote] = useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    });\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n\r\n        setNote(prevNote => {\r\n            return {\r\n                ...prevNote, //spread operator\r\n                [name]: value\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    function submitNote(event) {\r\n        props.onAdd(note);\r\n        setNote({\r\n            title: \"\",\r\n            content: \"\"\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    function expand() {\r\n        setExpanded(TocRounded);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"create-note\">\r\n                {isExpanded && (\r\n                    <input\r\n                        name=\"title\"\r\n                        onChange={handleChange}\r\n                        value={note.title}\r\n                        placeholder=\"Title\">\r\n                    </input>\r\n                )}\r\n                <textarea\r\n                    name=\"content\"\r\n                    onClick={expand}\r\n                    onChange={handleChange}\r\n                    value={note.content}\r\n                    placeholder=\"Write a note...\"\r\n                    rows={isExpanded ? 3 : 1}>\r\n                </textarea>\r\n                <Zoom in={isExpanded}>\r\n                    <Fab onClick={submitNote}><AddIcon /></Fab>\r\n                </Zoom>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateArea;","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Note from \"./Note\";\r\nimport notes from \"../notes\";\r\nimport CreateArea from \"./CreateArea\";\r\n\r\n/* function createnote(noteitem){\r\n  return <Note \r\n  title={noteitem.title}\r\n  content={noteitem.content}\r\n  />\r\n} */\r\n//as notes is type of array so we pass this array using map function\r\nfunction App() {\r\n\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  function addNote(newNote) {\r\n    setNotes(prevNotes => {\r\n      return [...prevNotes, newNote];\r\n    });\r\n  }\r\n\r\n  function deleteNote(id) {\r\n    setNotes(prevNotes => {\r\n      return prevNotes.filter((noteItem, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CreateArea\r\n        onAdd={addNote}\r\n      />\r\n      {notes.map((noteItem, index) => {\r\n        return <Note\r\n          key={index}\r\n          id={index}\r\n          title={noteItem.title}\r\n          content={noteItem.content}\r\n          onDelete={deleteNote} />;\r\n      })}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n//<Note key={noteitem.key} title={noteitem.title} content={noteitem.content} />\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n"],"sourceRoot":""}